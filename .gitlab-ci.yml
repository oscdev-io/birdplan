image: idmslinux/rolling

include:
  - template: 'Workflows/MergeRequest-Pipelines.gitlab-ci.yml'

# Stages we need to progress through
stages:
  - test
  - prepare_release
  - release
  - deploy

test_job:
  stage: test
  coverage: '/^TOTAL.+?(\d+\%)$/'
  script:
  # Create environment
  - pacman -Syu --noconfirm
  - pacman -S --noconfirm grep python
  - pacman -S --noconfirm
      git
      python-tox
  - pacman -S --noconfirm
      iproute2
      bird
      exabgp
      bgpq3
  # Run tests
  - contrib/test-environment/runtest $EXTRA_TEST_OPTS
  # Save HTML coverage report
  - tox -e cov-html
  - mkdir public
  - mv htmlcov public/coverage
  # Save coverage report
  artifacts:
    paths:
    - public

prepare_release:
  stage: prepare_release
  rules:
    - if: $CI_COMMIT_TAG
  script:
  - pacman -Syu --noconfirm
  - pacman -S --noconfirm git
  - mkdir build
  # Work out commit range for changelog
  - LAST_TAG=$(git tag --sort -version:refname | head -n2 | tail -n1)
  - if [ -n "$LAST_TAG" ]; then COMMIT_RANGE="$LAST_TAG..$CI_COMMIT_TAG"; else COMMIT_RANGE=""; fi
  # Output description file
  - echo "Automatic release based on tag $CI_COMMIT_TAG" > build/description.txt
  - git log --oneline --decorate --no-merges "$COMMIT_RANGE" >> build/description.txt
  artifacts:
    expire_in: 1 day
    paths:
    - build/

release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - echo "Release"
  release:
     name: 'Release $CI_COMMIT_TAG'
     description: 'Automatic release based on tag $CI_COMMIT_TAG'
     tag_name: '$CI_COMMIT_TAG'
     ref: '$CI_COMMIT_TAG'

pages:
  stage: deploy
  only:
  - master
  script:
  - echo "Deploying pages..."
  artifacts:
    paths:
    - public

